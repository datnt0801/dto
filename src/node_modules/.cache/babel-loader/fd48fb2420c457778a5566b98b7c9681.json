{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\datnt\\\\Desktop\\\\JS_basic\\\\app-learn\\\\todo-web\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { createElement, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [addContent, setAddContent] = useState('');\n  const [category, setCategory] = useState();\n  const [todo, setTodo] = useState([]);\n\n  const handleAddOnChange = event => {\n    console.log(addContent);\n    setAddContent(event.target.value);\n    setCategory(event.target.value);\n  };\n\n  const handleAddClick = () => {\n    if (addContent === '') {\n      alert('Text content can be empty!');\n    }\n\n    const newTodo = {\n      content: addContent,\n      category: category,\n      createAt: new Date(),\n      updateAt: new Date()\n    };\n    setTodo([...todo, newTodo]);\n    setAddContent('');\n    console.log(todo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's the plan today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-todo\",\n      onChange: handleAddOnChange,\n      type: \"text \",\n      value: addContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Category: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleAddOnChange,\n      type: \"number\",\n      value: addContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-button\",\n      onClick: handleAddClick,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"todo list: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), todo.map(e => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"chqvKDEgRP85iwKogCzzl8p70TI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/datnt/Desktop/JS_basic/app-learn/todo-web/src/App.js"],"names":["createElement","useState","App","addContent","setAddContent","category","setCategory","todo","setTodo","handleAddOnChange","event","console","log","target","value","handleAddClick","alert","newTodo","content","createAt","Date","updateAt","map","e"],"mappings":";;;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAxC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMQ,iBAAiB,GAAIC,KAAD,IAAU;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACAC,IAAAA,aAAa,CAACM,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAb;AACAR,IAAAA,WAAW,CAACI,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAX;AACD,GAJD;;AAMA,QAAMC,cAAc,GAAG,MAAK;AAC1B,QAAGZ,UAAU,KAAK,EAAlB,EAAqB;AACnBa,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;;AAED,UAAMC,OAAO,GAAG;AACdC,MAAAA,OAAO,EAAEf,UADK;AAEdE,MAAAA,QAAQ,EAAEA,QAFI;AAGdc,MAAAA,QAAQ,EAAE,IAAIC,IAAJ,EAHI;AAIdC,MAAAA,QAAQ,EAAE,IAAID,IAAJ;AAJI,KAAhB;AAOAZ,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUU,OAAV,CAAD,CAAP;AACAb,IAAAA,aAAa,CAAC,EAAD,CAAb;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACD,GAhBD;;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,QAAQ,EAAEE,iBAAxC;AAA2D,MAAA,IAAI,EAAC,OAAhE;AAAwE,MAAA,KAAK,EAAEN;AAA/E;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAO,MAAA,QAAQ,EAAEM,iBAAjB;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAkD,MAAA,KAAK,EAAEN;AAAzD;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAEY,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EAUIR,IAAI,CAACe,GAAL,CAAUC,CAAD,IAAM;AACb,0BACE;AAAA,+BACE;AAAA,oBAAIA,CAAC,CAACL;AAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND,CAVJ,eAkBE;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GArDQhB,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import {createElement, useState} from 'react'\nimport './App.css';\n\nfunction App() {\n  const [addContent, setAddContent] = useState('')\n  const [category, setCategory] = useState()\n  const [todo, setTodo] = useState([])\n\n  const handleAddOnChange = (event) =>{\n    console.log(addContent)\n    setAddContent(event.target.value)\n    setCategory(event.target.value)\n  } \n\n  const handleAddClick = () =>{\n    if(addContent === ''){\n      alert('Text content can be empty!')\n    }\n\n    const newTodo = { \n      content: addContent,\n      category: category,\n      createAt: new Date(),\n      updateAt: new Date()\n    }\n\n    setTodo([...todo, newTodo]);\n    setAddContent('');\n\n    console.log(todo);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>What's the plan today?</h1>\n      <input className='input-todo' onChange={handleAddOnChange} type=\"text \" value={addContent}></input>\n      <br></br>\n      <p>Category: </p>\n      <input onChange={handleAddOnChange} type='number' value={addContent}></input>\n      <br></br>\n      <button className='add-button' onClick={handleAddClick}>Add</button>\n      <p>todo list: </p>\n      {\n        todo.map((e) =>{\n          return (\n            <div>\n              <p>{e.content}</p>\n            </div>\n          )\n        })\n      }\n      <div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}